version: "3.1"
services:
    db:
        image: postgres:16
        restart: always
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_NAME}
        ports:
            - ${DB_PORT}:5432
        volumes:
            - postgres-data-volume:/var/lib/postgresql/data
        networks:
            - backend

    pgadmin:
        container_name: pg-admin
        image: dpage/pgadmin4
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        ports:
            - ${PGADMIN_PORT}:80

    redis:
        image: redis:7.2.4
        restart: always
        ports:
            - ${REDIS_PORT}:6379
        command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
        volumes:
            - redis-cache:/data
        networks:
            - backend

    redisInsight:
        container_name: redis-insight
        image: redislabs/redisinsight
        restart: always
        ports:
            - ${REDIS_INSIGHT_PORT}:8001

    # server:
    #     build: ./server
    #     ports:
    #         - 5000:5000
    #     depends_on:
    #         - db
    #         - redis
    #     env_file:
    #         - ./.env.server
    #     networks:
    #         - backend

    # client:
    #     build: ./client
    #     ports:
    #         - 3000:3000
    #     depends_on:
    #         - server
    #     networks:
    #         - backend

    # azure-function:
    #     build: ./azure
    #     ports:
    #         - "7071:80"
    #     env_file:
    #         - ./.env.azure
    #     volumes:
    #         - ./etc/test-secrets:/azure-functions-host/Secrets
    #     networks:
    #         - backend
        # depends_on:
        #     - azurite

    # azurite:
    #     image: mcr.microsoft.com/azure-storage/azurite
    #     container_name: azurite
    #     hostname: azurite
    #     restart: always
    #     command: "azurite --blobHost 0.0.0.0 --blobPort 10000 --queueHost 0.0.0.0 --queuePort 10001 --tableHost 0.0.0.0 --tablePort 10002"
    #     ports:
    #         - "10000:10000"
    #         - "10001:10001"
    #         - "10002:10002"
    #     networks:
    #         - backend

volumes:
    postgres-data-volume:
        external: true
    redis-cache:
        external: true

networks:
    backend:
        driver: bridge
